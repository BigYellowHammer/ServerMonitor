@{
    ViewBag.Title = "Server Monitor";
}


<script type="text/javascript">
    $(function () {

        window.buildEvents = {
            'click .stop': function (e, value, row, index) {
                $.ajax({
                    method: "POST",
                    url: 'Monitor/Stop',
                    data: JSON.stringify(row.ApplicationPools),
                    dataType: 'json',
                    contentType: 'application/json',
                    success: function (data) {
                        bootstrap_alert.success(data.Message);
                        $('#buildTbl').bootstrapTable('refresh', { 'silent': true });
                        $('#oracleTbl').bootstrapTable('refresh', { 'silent': true });
                    },
                    error: function (jqXHR, status, error) {
                        bootstrap_alert.error('[' + status + '] ' + error);
                        $('#buildTbl').bootstrapTable('refresh', { 'silent': true });
                        $('#oracleTbl').bootstrapTable('refresh', { 'silent': true });
                    }
                });
            },
            'click .start': function (e, value, row, index) {
                $.ajax({
                    method: "POST",
                    url: 'Monitor/Start',
                    data: JSON.stringify(row.ApplicationPools),
                    dataType: 'json',
                    contentType: 'application/json',
                    success: function (data) {
                        bootstrap_alert.success(data.Message);
                        $('#buildTbl').bootstrapTable('refresh', { silent: true });
                    },
                    error: function (jqXHR, status, error) {
                        var detailError = '';
                        if (jqXHR.responseText)
                            detailError = '- ' + $.parseJSON(jqXHR.responseText).Message;
                        bootstrap_alert.error(error + ' ' + detailError);
                        $('#buildTbl').bootstrapTable('refresh', { silent: true });
                    }
                });
            },
            'click .whitelist': function (e, value, row, index) {
                $.ajax({
                    method: "POST",
                    url: 'Monitor/Whitelist',
                    data: JSON.stringify(row),
                    dataType: 'json',
                    contentType: 'application/json',
                    success: function (data) {
                        bootstrap_alert.success(data.Message);
                        $('#buildTbl').bootstrapTable('refresh', { silent: true });
                    },
                    error: function (jqXHR, status, error) {
                        var detailError = '';
                        if (jqXHR.responseText)
                            detailError = '- ' + $.parseJSON(jqXHR.responseText).Message;
                        bootstrap_alert.error(error + ' ' + detailError);
                        $('#buildTbl').bootstrapTable('refresh', { silent: true });
                    }
                });
            },
            'click .unwhitelist': function (e, value, row, index) {
                $.ajax({
                    method: "POST",
                    url: 'Monitor/UnWhitelist',
                    data: JSON.stringify(row),
                    dataType: 'json',
                    contentType: 'application/json',
                    success: function (data) {
                        bootstrap_alert.success(data.Message);
                        $('#buildTbl').bootstrapTable('refresh', { silent: true });
                    },
                    error: function (jqXHR, status, error) {
                        var detailError = '';
                        if (jqXHR.responseText)
                            detailError = '- ' + $.parseJSON(jqXHR.responseText).Message;
                        bootstrap_alert.error(error + ' ' + detailError);
                        $('#buildTbl').bootstrapTable('refresh', { silent: true });
                    }
                });
            }
        };

        $('#buildTbl').bootstrapTable({
            url: 'Monitor/GetIISApplications',
            locale: 'en-IE',
            columns: [
                {
                    field: 'Name',
                    title: 'Application'
                }, {
                    field: 'State',
                    title: 'State'
                },
                {
                    title: '',
                    align: 'center',
                    events: buildEvents,
                    formatter: function operateFormatter(value, row, index) {
                        var html = [];

                        if (row.State === 'Running') {
                            html.push('<a class="btn stop" href="javascript:void(0)" title="Stop">');
                            html.push('<i class="glyphicon glyphicon-stop"></i>');
                            html.push('</a>');
                        }

                        if (row.State === 'Stopped') {
                            html.push('<a class="btn start" href="javascript:void(0)" title="Start">');
                            html.push('<i class="glyphicon glyphicon-play"></i>');
                            html.push('</a>');
                        }

                        if (!row.IsWhitelisted) {
                            html.push('<a class="btn whitelist" href="javascript:void(0)" title="Whitelist">');
                            html.push('<i class="glyphicon glyphicon-star-empty"></i>');
                            html.push('</a>');
                        }

                        if (row.IsWhitelisted) {
                            html.push('<a class="btn unwhitelist" href="javascript:void(0)" title="Un-Whitelist">');
                            html.push('<i class="glyphicon glyphicon-star"></i>');
                            html.push('</a>');
                        }

                        html.push('<a href="#" class="btn" data-pk="' + row.Name + '" data-value="' + row.Note + '" id="editNote"></a>');

                        return html.join('');
                    }
                }
            ],
            onPostBody: function () {
                $('a#editNote').editable({
                    type: 'text',
                    url: 'Monitor/SaveBuildNote',
                    title: 'Edit Build Note',
                    emptytext: 'Add note',
                    mode: 'inline',
                    ajaxOptions: {
                        type: 'POST',
                        contentType: 'application/json',
                        dataType: 'json'
                    },
                    params: function (params) {
                        return JSON.stringify(params);
                    },
                    display: function (value, sourceData) {
                        if (value) {
                            $(this).html('<a href="#" data-toggle="tooltip" title="' +
                                value +
                                '"><i class="glyphicon glyphicon-exclamation-sign"></i></a>');
                        } else {
                            $(this).html('<a href="#" data-toggle="tooltip" title="Add note"><i class="glyphicon glyphicon-pencil"></i></a>');
                        }
                    },
                    error: function(data, newValue) {
                        var detailError = '';
                        if (data.responseText)
                            detailError = '- ' + $.parseJSON(data.responseText).Message;
                        bootstrap_alert.error(newValue + ' ' + detailError);
                    },
                    success: function(data, newValue) {
                        bootstrap_alert.success(data.Message);
                    }
                });
            },
            detailView: true,
            detailFormatter: function (index, row, element) {
                var html = [];
                html.push('<table id="appPoolTbl' + index + '" class="table table-hover table-striped">');
                html.push('<thead><tr>');
                html.push('<th data-field="Name">Name</th>');
                html.push('<th data-field="State">State</th>');
                html.push('</thead>');
                html.push('<tbody>');
                html.push('</tbody>');
                html.push('</table>');
                $(element).append(html.join(''));
                $('#appPoolTbl' + index).bootstrapTable({
                    locale: 'en-IE',
                    columns: [
                        {
                            field: 'Name',
                            title: 'Application Pool'
                        }, {
                            field: 'State',
                            title: 'State'
                        },
                        {
                            title: '',
                            align: 'center',
                            events: operateEvents,
                            formatter: operateFormatter
                        }
                    ],
                    data: row.ApplicationPools,
                    detailView: true,
                    detailFormatter: function (ind, dataRow, el) {
                        var html = [];
                        html.push('<table id="webAppsTbl' + index + '_' + ind + '" class="table table-hover table-striped">');
                        html.push('<thead><tr>');
                        html.push('<th data-field="Name">Name</th>');
                        html.push('</thead>');
                        html.push('<tbody>');
                        html.push('</tbody>');
                        html.push('</table>');
                        $(el).append(html.join(''));
                        $('#webAppsTbl' + index + '_' + ind).bootstrapTable({
                            data: dataRow.WebApplications,
                            locale: 'en-IE',
                            columns: [
                                {
                                    field: 'Name',
                                    title: 'Web Application'
                                }]
                        });
                    }
                });
            }
        });
        $('#diskTbl').bootstrapTable({
            url: 'Monitor/GetDiskUsage',
            locale: 'en-IE',
            columns: [
                {
                    field: 'Path',
                    title: 'Path'
                }, {
                    field: 'Size',
                    title: 'Size',
                    formatter: function (value) {
                        return Math.round((value / 1024 / 1024)) + ' MB';
                    }
                }, {
                    field: 'Usage',
                    title: 'Usage',
                    formatter: function (value) {
                        return value + ' %';
                    }
                }
            ]
        });
        $('#taskTbl').bootstrapTable({
            url: 'Monitor/GetScheduledTasks',
            locale: 'en-IE',
            columns: [
                {
                    field: 'Name',
                    title: 'Name'
                }, {
                    field: 'State',
                    title: 'State'
                }, {
                    field: 'LastRunTime',
                    title: 'Last Run At'
                }, {
                    field: 'LastTaskResult',
                    title: 'Last Run Exit code'
                }, {
                    title: '',
                    align: 'center',
                    events: {
                        'click .start': function (e, value, row, index) {
                            $.ajax({
                                method: "POST",
                                url: 'Monitor/StartTask?Path=' + row.Path,
                                dataType: 'json',
                                contentType: 'application/json',
                                success: function (data) {

                                    bootstrap_alert.success(data.Message);
                                    $('#taskTbl').bootstrapTable('refresh', { 'silent': true });
                                },
                                error: function (jqXHR, status, error) {
                                    bootstrap_alert.error('[' + status + '] ' + error);
                                    $('#taskTbl').bootstrapTable('refresh', { 'silent': true });
                                }
                            });
                        },
                        'click .stop': function (e, value, row, index) {
                            $.ajax({
                                method: "POST",
                                url: 'Monitor/StopTask?Path=' + row.Path,
                                dataType: 'json',
                                contentType: 'application/json',
                                success: function (data) {
                                    bootstrap_alert.success(data.Message);
                                    $('#taskTbl').bootstrapTable('refresh', { 'silent': true });
                                },
                                error: function (jqXHR, status, error) {
                                    bootstrap_alert.error('[' + status + '] ' + error);
                                    $('#taskTbl').bootstrapTable('refresh', { 'silent': true });
                                }
                            });
                        }
                    },
                    formatter: function (value, row, index) {
                        var html = [];
                        if (row.State === 'Running') {
                            html.push('<a class="btn stop" href="javascript:void(0)" title="Stop">');
                            html.push('<i class="glyphicon glyphicon-stop"></i>');
                            html.push('</a>');
                        }

                        if (row.State === 'Ready') {
                            html.push('<a class="btn start" href="javascript:void(0)" title="Start">');
                            html.push('<i class="glyphicon glyphicon-play"></i>');
                            html.push('</a>');
                        }

                        return html.join('');
                    }
                }
            ]
        });
        $('#userTbl').bootstrapTable({
            url: 'Monitor/GetUserSesssions',
            locale: 'en-IE',
            columns: [
                {
                    field: 'User',
                    title: 'Path'
                }, {
                    field: 'LoginDate',
                    title: 'Login Date'
                }, {
                    field: 'State',
                    title: 'Session State',
                    formatter: function (value, row, index) {
                        if (value === 'Disconnected') {
                            return '<span class="btn alert-danger">' + value + '</span>';
                        } else {
                            return '<span class="btn alert-dark">' + value + '</span>';
                        }
                    }
                }
            ]
        });

        window.operateEvents = {
            'click .refresh': function (e, value, row, index) {
                $.ajax({
                    url: 'Monitor/Recycle?Name=' + row.Name,
                    success: function (data) {
                        bootstrap_alert.success(data.Message);
                    },
                    error: function (jqXHR, status, error) {
                        var detailError = '';
                        if (jqXHR.responseText)
                            detailError = '- ' + $.parseJSON(jqXHR.responseText).Message;
                        bootstrap_alert.error(error + ' ' + detailError);
                    }
                });

            }
        };
        function operateFormatter(value, row, index) {
            return ['<a class="refresh" href="javascript:void(0)" title="Recycle">',
                '<i class="glyphicon glyphicon-refresh"></i>',
                '</a>'
            ].join('');
        }
        bootstrap_alert = function () { }
        bootstrap_alert.success = function (message) {
            $('#alert_placeholder')
                .append('<div class="alert alert-success alert-dismissible"><a class="close" data-dismiss="alert">×</a><span>' +
                message +
                '</span></div>');
        }
        bootstrap_alert.error = function (message) {
            $('#alert_placeholder')
                .append('<div class="alert alert-danger alert-dismissible"><a class="close" data-dismiss="alert">×</a><span>' +
                message +
                '</span></div>');
        }



        $('#oracleTbl').bootstrapTable({
            url: 'Monitor/GetOracleInstances',
            locale: 'en-IE',
            columns: [
                {
                    field: 'DisplayName',
                    title: 'Name'
                }, {
                    field: 'CurrentBuildName',
                    title: 'Build Name'
                }, {
                    field: 'CurrentBuildDate',
                    title: 'Build Date'
                }, {
                    title: '',
                    formatter: function (value, row, index) {
                        var html = [];
                        if (row.IsReserved) {
                            html.push('<a class="btn start" href="javascript:setReserved(' + row.Id + ', false)" title="Start">');
                            html.push('<i title="Reserved" class="btn glyphicon glyphicon-star"></i>');
                            html.push('</a>');
                            
                        } else {
                            html.push('<a class="btn start" href="javascript:setReserved(' + row.Id + ', true)" title="Start">');
                            html.push('<i title="Not Reserved" class="btn glyphicon glyphicon-star-empty"></i>');
                            html.push('</a>');
                            
                        }

                        if (row.IsDeploying) {
                            html.push('<i title="Deploy In Progress" class="btn glyphicon glyphicon-play-circle"></i>');
                        }

                        return html.join('');
                    }
                }
            ]
        });

        setInterval(function () {
            $.ajax({
                url: 'Monitor/GetCPU',
                success: function (data) {
                    $('#cpuChart').text('').doughnutChart({
                        positiveColor: "red",
                        negativeColor: "green",
                        backgroundColor: "white",
                        percentage: data.Value,
                        size: 100,
                        doughnutSize: 0.35,
                        innerText: data.Value + '%',
                        innerTextOffset: 12,
                        Title: "% CPU Utilisation",
                        positiveText: "Used",
                        negativeText: "Free"
                    });
                },
                error: function (jqXHR, status, error) {
                    var detailError = '';
                    if (jqXHR.responseText)
                        detailError = '- ' + $.parseJSON(jqXHR.responseText).Message;
                    bootstrap_alert.error(error + ' ' + detailError);
                }
            });
        }, 1000);

        setInterval(function () {
            $.ajax({
                url: 'Monitor/GetFreeMemory',
                success: function (data) {
                    $('#memChart').text('').doughnutChart({
                        positiveColor: "red",
                        negativeColor: "green",
                        backgroundColor: "white",
                        percentage: data.Value,
                        size: 100,
                        doughnutSize: 0.35,
                        innerText: data.Value + '%',
                        innerTextOffset: 12,
                        Title: "% Memory Utilisation",
                        positiveText: "Used",
                        negativeText: "Free"
                    });
                },
                error: function (jqXHR, status, error) {
                    var detailError = '';
                    if (jqXHR.responseText)
                        detailError = '- ' + $.parseJSON(jqXHR.responseText).Message;
                    bootstrap_alert.error(error + ' ' + detailError);
                }
            });
        }, 1000);

        setInterval(function () {
            $.ajax({
                url: 'Monitor/GetFreeSpace',
                success: function (data) {
                    $('#diskChart').text('').doughnutChart({
                        positiveColor: "green",
                        negativeColor: "red",
                        backgroundColor: "white",
                        percentage: data.Value,
                        size: 100,
                        doughnutSize: 0.35,
                        innerText: data.Value + '%',
                        innerTextOffset: 12,
                        Title: "% Disk Utilisation",
                        positiveText: "Free",
                        negativeText: "Used"
                    });
                },
                error: function (jqXHR, status, error) {
                    var detailError = '';
                    if (jqXHR.responseText)
                        detailError = '- ' + $.parseJSON(jqXHR.responseText).Message;
                    bootstrap_alert.error(error + ' ' + detailError);
                }
            });
        }, 1000);
        
        function getserviceState() {
            $.ajax({
                url: 'Monitor/GetserviceState',
                success: function (data) {
                    var html = [];
                    if (data.Message === 'SUCCESS') {
                        html.push('<button class="btn btn-success" type="button">service <span class="badge">Online</span></button>');
                        html.push('');
                    } else {
                        html.push('<button class="btn btn-danger" type="button">');
                        html.push('service <span class="badge">');
                        html.push(data.Message);
                        html.push('</span></button> ');
                    }

                    $('#serviceBadge').html(html.join(''));
                },
                error: function (jqXHR, status, error) {
                    var html = [];
                    html.push('<button class="btn btn-danger" type="button">');
                    html.push('service <span class="badge">');
                    html.push('Error');
                    html.push('</span></button> ');
                    $('#serviceBadge').html(html.join(''));
                }
            });
        }

        function getElasticState() {
            $.ajax({
                url: 'Monitor/GetElasticsearchState',
                success: function (data) {
                    var html = [];
                    if (data.Message === 'SUCCESS') {
                        html.push('<button class="btn btn-success" type="button">Elasticsearch <span class="badge">Online</span></button>');
                        html.push('');
                    } else {
                        html.push('<button class="btn btn-danger" type="button">');
                        html.push('Elasticsearch <span class="badge">');
                        html.push(data.Message);
                        html.push('</span></button> ');
                    }

                    $('#elasticBadge').html(html.join(''));
                },
                error: function (jqXHR, status, error) {
                    var html = [];
                    html.push('<button class="btn btn-danger" type="button">');
                    html.push('Elasticsearch <span class="badge">');
                    html.push('Error');
                    html.push('</span></button> ');
                    $('#elasticBadge').html(html.join(''));
                }
            });
        }
        
        getserviceState();
        getElasticState();
        
        setInterval(getserviceState(), 5000);

        setInterval(getElasticState(), 5000);

        window.setReserved = function (id, isReserved) {
            $.ajax({
                method: "POST",
                url: 'Monitor/SetOracleInstanceReserved?id=' + id + '&isReserved=' + isReserved,
                success: function (data) {
                    bootstrap_alert.success(data.Message);
                    $('#oracleTbl').bootstrapTable('refresh', { 'silent': true });
                },
                error: function (jqXHR, status, error) {
                    var detailError = '';
                    if (jqXHR.responseText)
                        detailError = '- ' + $.parseJSON(jqXHR.responseText).Message;
                    bootstrap_alert.error(error + ' ' + detailError);
                    $('#oracleTbl').bootstrapTable('refresh', { 'silent': true });
                }
            });
        }

    });

</script>

<h1>Server Monitor | @Server.MachineName</h1>
<div class="container">
    <div id="alert_placeholder"></div>
    <h2>Hardware Monitor</h2>
    <table id="hwdMon" class="table table-hover table-striped">
        <thead>
        <tr>
            <th>CPU</th>
            <th>Available Memory</th>
            <th>Available Disk Space</th>
        </tr>
        </thead>
        <tbody>
        <tr>
            <td>
                <div id="cpuChart"></div>
            </td>
            <td>
                <div id="memChart"></div>
            </td>
            <td>
                <div id="diskChart"></div>
            </td>
        </tr>
        </tbody>
    </table>
    <h2>Component Status</h2>
    <table id="javaTbl">
        <tbody>
            <tr>
                <td id="serviceBadge"></td>
                <td id="breBadge"></td>
                <td id="elasticBadge"></td>
            </tr>
        </tbody>
    </table>
    <h2>IIS Applications</h2>
    <table id="buildTbl" class="table table-hover table-striped">
        <thead>
            <tr>
                <th data-field="Name">Name</th>
                <th data-field="State">State</th>
            </tr>
        </thead>
    </table>

    <h2>Disk Space</h2>
    <table id="diskTbl" class="table table-hover table-striped">
        <thead>
            <tr>
                <th data-field="Path">Path</th>
                <th data-field="Size">Size</th>
                <th data-field="Usage">Usage</th>
            </tr>
        </thead>
    </table>

    <h2>Scheduled Tasks</h2>
    <table id="taskTbl" class="table table-hover table-striped">
        <thead>
            <tr>
                <th data-field="Path">Name</th>
                <th data-field="Size">State</th>
            </tr>
        </thead>
    </table>

    <h2>Oracle Instances</h2>
    <table id="oracleTbl" class="table table-hover table-striped">
        <thead>
            <tr>
                <th data-field="DisplayName">Name</th>
                <th data-field="CurrentBuildName">Build Name</th>
                <th data-field="CurrentBuildDate">Build Date</th>
                <th data-field="IsReserved"></th>
            </tr>
        </thead>
    </table>

    <h2>User Sessions</h2>
    <table id="userTbl" class="table table-hover table-striped">
        <thead>
            <tr>
                <th data-field="User">Name</th>
                <th data-field="LoginDate">Login Date</th>
                <th data-field="State">Session State</th>
            </tr>
        </thead>
    </table>
</div>